package com.od.eisgroup.interviewer.domain.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.ManyToMany;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ForeignKey;

import java.util.HashSet;
import java.util.Set;

/**
 * <p>
 *     This class is an entity of Interviewer.
 * </p>
 *
 * @author <a href='mailto:antoxalanio@gmail.com'>Anton Lomakin</a>
 *
 * @since 1.0
 */

//@Entity
public class Interviewer extends AbstractEntity {

    @Column(nullable = false)
    private String firstName;

    @Column(nullable = false)
    private String lastName;

    @Column(nullable = false, unique = true)
    private String email;

    @ManyToMany(cascade = CascadeType.PERSIST)
    @JoinTable(name = "interviewInterviewer", joinColumns = @JoinColumn(name = "interviewer_id"),
            inverseJoinColumns = @JoinColumn(name = "interview_id"),
            foreignKey = @ForeignKey(name = "FK_Interview_Interviewer"))
    private Set<Interview> interviews = new HashSet<>();

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Set<Interview> getInterviews() {
        return interviews;
    }

    public void setInterviews(Set<Interview> interviews) {
        this.interviews = interviews;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof Interviewer)){
            return false;
        }
        Interviewer interviewer = (Interviewer) o;
        return  (getEmail() != null && getEmail().equals(interviewer.getEmail())) &&
                (getFirstName() != null && getFirstName().equals(interviewer.getFirstName())) &&
                (getLastName() != null && getLastName().equals(interviewer.getLastName()));
    }

    @Override
    public int hashCode() {
        int result = 1;
        final int prime = 31;
        result = result * prime + (getEmail() == null ? 0 : getEmail().hashCode());
        result = result * prime + (getFirstName() == null ? 0 : getFirstName().hashCode());
        result = result * prime + (getLastName() == null ? 0 : getLastName().hashCode());
        return result;
    }
}
